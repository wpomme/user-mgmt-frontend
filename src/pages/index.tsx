import { useState, useEffect, useContext } from 'react'
import type { NextPage } from 'next'
import Head from 'next/head'
import styles from './index.module.css'
import { AppContext } from '../context/App'
import Link from 'next/link'
import { Layout } from '../components/templates/Layout'

const fetchUsers = async (accessToken: string) => {
  const res = await fetch(
    'http://localhost:4000/api/v1/users',
    {
      method: 'GET',
      headers: {
        'Content-type': 'application/json',
        'Authorization': `Bearer ${accessToken}`,
      },
    }
  )

  const result = await res.json()

  if (res.status === 200) {
    return { data: result, error: null }
  }

  console.error(result)
  return { data: null, error: result }
}

interface FetchUsersError extends Error {
  expiredAt?: string
  date?: string
}

// TODO accessTokenが空の時がある
const Index: NextPage = () => {
  const [data, setData] = useState<any>(null)
  const [error, setError] = useState<FetchUsersError | null>(null)
  const context = useContext(AppContext)

  useEffect(() => {
    const fetchUsersInUseEffect = async (accessToken: string) => {
      const { data, error } = await fetchUsers(accessToken)
      setData(data)
      setError(error)
    }

    if (!data && !error && context.accessToken) {
      fetchUsersInUseEffect(context.accessToken ? context.accessToken : "")
    }
  }, [data, error, context.accessToken])

  if (error) {
    return (
      <>
        <div>Error!</div>
        {error.name === 'TokenExpiredError' && (
          <>
            <p>ログイン期限が切れています。ログインし直してください。</p>
            <p><Link href="/login">ログイン</Link></p>
          </>
        )}
      </>
    )
  }

  if (!data) {
    return (
      <div>Loading...</div>
    )
  }

  return (
    <>
      <Head>
        <title>Home</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <Layout>
        <main className={styles.main}>
          {data.data.map((user: any, i: number) => (
            <div key={i}>
              <span>{user.id}</span>
              <span>{user.email}</span>
              <span>{user.name}</span>
            </div>
          ))}
        </main>
      </Layout>
    </>
  )
}

export default Index
